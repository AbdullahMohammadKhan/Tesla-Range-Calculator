{"ast":null,"code":"import TeslaCounter from \"../components/TeslaCounter/TeslaCounter\";\nimport { connect } from \"react-redux\";\nimport { temperatureUp, temperatureDown } from \"../actions\";\nimport { counterDefaultVal } from \"../constants/counterDefaultVal\";\n\nconst mapStateToProps = state => {\n  return {\n    currentValue: state.config.temperature,\n    initValues: counterDefaultVal.temperature\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: value => {\n      dispatch(temperatureUp(value));\n    },\n    decrement: value => {\n      dispatch(temperatureDown(value));\n    }\n  };\n};\n\nconst TeslaTempCounterContainer = connect(mapStateToProps, mapDispatchToProps)(TeslaCounter);\nexport default TeslaTempCounterContainer;","map":{"version":3,"sources":["/Users/abdullah/codes/react/teslaRangeCalculator/react-tesla-range-calculator/src/containers/TeslaTempCounterContainer.js"],"names":["TeslaCounter","connect","temperatureUp","temperatureDown","counterDefaultVal","mapStateToProps","state","currentValue","config","temperature","initValues","mapDispatchToProps","dispatch","increment","value","decrement","TeslaTempCounterContainer"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,yCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,YAA/C;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,YAAY,EAAED,KAAK,CAACE,MAAN,CAAaC,WADtB;AAELC,IAAAA,UAAU,EAAEN,iBAAiB,CAACK;AAFzB,GAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBF,MAAAA,QAAQ,CAACV,aAAa,CAACY,KAAD,CAAd,CAAR;AACD,KAHI;AAILC,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBF,MAAAA,QAAQ,CAACT,eAAe,CAACW,KAAD,CAAhB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,MAAME,yBAAyB,GAAGf,OAAO,CACvCI,eADuC,EAEvCM,kBAFuC,CAAP,CAGhCX,YAHgC,CAAlC;AAKA,eAAegB,yBAAf","sourcesContent":["import TeslaCounter from \"../components/TeslaCounter/TeslaCounter\";\nimport { connect } from \"react-redux\";\nimport { temperatureUp, temperatureDown } from \"../actions\";\nimport { counterDefaultVal } from \"../constants/counterDefaultVal\";\n\nconst mapStateToProps = (state) => {\n  return {\n    currentValue: state.config.temperature,\n    initValues: counterDefaultVal.temperature,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: (value) => {\n      dispatch(temperatureUp(value));\n    },\n    decrement: (value) => {\n      dispatch(temperatureDown(value));\n    },\n  };\n};\n\nconst TeslaTempCounterContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TeslaCounter);\n\nexport default TeslaTempCounterContainer;\n"]},"metadata":{},"sourceType":"module"}