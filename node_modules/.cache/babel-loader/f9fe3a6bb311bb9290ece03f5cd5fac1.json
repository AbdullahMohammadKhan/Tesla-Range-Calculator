{"ast":null,"code":"import { getModelData } from '../services/BatteryService';\nconst initialState = {\n  carstats: [{\n    miles: 246,\n    model: \"60\"\n  }, {\n    miles: 250,\n    model: \"60D\"\n  }, {\n    miles: 297,\n    model: \"75\"\n  }, {\n    miles: 306,\n    model: \"75D\"\n  }, {\n    miles: 336,\n    model: \"90D\"\n  }, {\n    miles: 376,\n    model: \"P100D\"\n  }],\n  config: {\n    speed: 55,\n    temperature: 20,\n    climate: true,\n    wheels: 19\n  }\n};\n\nfunction updateStats(state, newState) {\n  return { ...state,\n    config: newState.config,\n    carstats: calculateStats(newState)\n  };\n}\n\nfunction calculateStats(state) {\n  const models = ['60', '60D', '75', '75D', '90D', 'P100D'];\n  const dataModels = getModelData();\n  return models.map(model => {\n    const {\n      speed,\n      temperature,\n      climate,\n      wheels\n    } = state.config;\n    const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n    return {\n      model,\n      miles\n    };\n  });\n}\n\nfunction appReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'CHANGE_CLIMATE':\n      {\n        const newState = { ...state,\n          config: {\n            climate: !state.config.climate,\n            speed: state.config.speed,\n            temperature: state.config.temperature,\n            wheels: state.config.wheels\n          }\n        };\n        return updateStats(state, newState);\n      }\n\n    case 'SPEED_UP':\n      {\n        const newState = { ...state,\n          config: {\n            climate: state.config.climate,\n            speed: action.value + action.step,\n            temperature: state.config.temperature,\n            wheels: state.config.wheels\n          }\n        };\n        return updateStats(state, newState);\n      }\n\n    case 'SPEED_DOWN':\n      {\n        const newState = { ...state,\n          config: {\n            climate: state.config.climate,\n            speed: action.value - action.step,\n            temperature: state.config.temperature,\n            wheels: state.config.wheels\n          }\n        };\n        return updateStats(state, newState);\n      }\n\n    case 'TEMPERATURE_UP':\n      {\n        const newState = { ...state,\n          config: {\n            climate: state.config.climate,\n            speed: state.config.speed,\n            temperature: action.value + action.step,\n            wheels: state.config.wheels\n          }\n        };\n        return updateStats(state, newState);\n      }\n\n    case 'TEMPERATURE_DOWN':\n      {\n        const newState = { ...state,\n          config: {\n            climate: state.config.climate,\n            speed: state.config.speed,\n            temperature: action.value - action.step,\n            wheels: state.config.wheels\n          }\n        };\n        return updateStats(state, newState);\n      }\n\n    case 'CHANGE_WHEEL':\n      {\n        const newState = { ...state,\n          config: {\n            climate: state.config.climate,\n            speed: state.config.speed,\n            temperature: state.config.temperature,\n            wheels: action.value\n          }\n        };\n        return updateStats(state, newState);\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","map":{"version":3,"sources":["/Users/abdullah/codes/react/teslaRangeCalculator/react-tesla-range-calculator/src/reducers/teslaRangeApp.js"],"names":["getModelData","initialState","carstats","miles","model","config","speed","temperature","climate","wheels","updateStats","state","newState","calculateStats","models","dataModels","map","appReducer","action","type","value","step"],"mappings":"AAAA,SAASA,YAAT,QAA6B,4BAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADQ,EAER;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAFQ,EAGR;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAHQ,EAIR;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAJQ,EAKR;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GALQ,EAMR;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GANQ,CADS;AASnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,WAAW,EAAE,EAFP;AAGNC,IAAAA,OAAO,EAAE,IAHH;AAINC,IAAAA,MAAM,EAAE;AAJF;AATW,CAArB;;AAiBA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,SAAO,EACL,GAAGD,KADE;AAELN,IAAAA,MAAM,EAAEO,QAAQ,CAACP,MAFZ;AAGLH,IAAAA,QAAQ,EAAEW,cAAc,CAACD,QAAD;AAHnB,GAAP;AAKD;;AAED,SAASC,cAAT,CAAwBF,KAAxB,EAA+B;AAC7B,QAAMG,MAAM,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,KAA3B,EAAkC,OAAlC,CAAf;AACA,QAAMC,UAAU,GAAGf,YAAY,EAA/B;AACA,SAAOc,MAAM,CAACE,GAAP,CAAWZ,KAAK,IAAI;AACzB,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA,OAAtB;AAA+BC,MAAAA;AAA/B,QAA0CE,KAAK,CAACN,MAAtD;AACA,UAAMF,KAAK,GAAGY,UAAU,CAACX,KAAD,CAAV,CAAkBK,MAAlB,EAA0BD,OAAO,GAAG,IAAH,GAAU,KAA3C,EAAkDF,KAAlD,CAAwDA,KAAxD,EAA+DC,WAA/D,CAAd;AACA,WAAO;AACLH,MAAAA,KADK;AAELD,MAAAA;AAFK,KAAP;AAID,GAPM,CAAP;AAQD;;AAED,SAASc,UAAT,CAAoBN,KAAK,GAAGV,YAA5B,EAA0CiB,MAA1C,EAAkD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AAAuB;AACrB,cAAMP,QAAQ,GAAG,EACf,GAAGD,KADY;AAEfN,UAAAA,MAAM,EAAE;AACNG,YAAAA,OAAO,EAAE,CAACG,KAAK,CAACN,MAAN,CAAaG,OADjB;AAENF,YAAAA,KAAK,EAAEK,KAAK,CAACN,MAAN,CAAaC,KAFd;AAGNC,YAAAA,WAAW,EAAEI,KAAK,CAACN,MAAN,CAAaE,WAHpB;AAINE,YAAAA,MAAM,EAAEE,KAAK,CAACN,MAAN,CAAaI;AAJf;AAFO,SAAjB;AASA,eAAOC,WAAW,CAACC,KAAD,EAAQC,QAAR,CAAlB;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,cAAMA,QAAQ,GAAG,EACb,GAAGD,KADU;AAEbN,UAAAA,MAAM,EAAE;AACNG,YAAAA,OAAO,EAACG,KAAK,CAACN,MAAN,CAAaG,OADf;AAENF,YAAAA,KAAK,EAACY,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACG,IAFtB;AAGNd,YAAAA,WAAW,EAACI,KAAK,CAACN,MAAN,CAAaE,WAHnB;AAINE,YAAAA,MAAM,EAACE,KAAK,CAACN,MAAN,CAAaI;AAJd;AAFK,SAAjB;AASA,eAAOC,WAAW,CAACC,KAAD,EAAQC,QAAR,CAAlB;AACD;;AACD,SAAK,YAAL;AAAmB;AACjB,cAAMA,QAAQ,GAAG,EACb,GAAGD,KADU;AAEbN,UAAAA,MAAM,EAAE;AACNG,YAAAA,OAAO,EAACG,KAAK,CAACN,MAAN,CAAaG,OADf;AAENF,YAAAA,KAAK,EAACY,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACG,IAFtB;AAGNd,YAAAA,WAAW,EAACI,KAAK,CAACN,MAAN,CAAaE,WAHnB;AAINE,YAAAA,MAAM,EAACE,KAAK,CAACN,MAAN,CAAaI;AAJd;AAFK,SAAjB;AASA,eAAOC,WAAW,CAACC,KAAD,EAAQC,QAAR,CAAlB;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAMA,QAAQ,GAAG,EACb,GAAGD,KADU;AAEbN,UAAAA,MAAM,EAAE;AACNG,YAAAA,OAAO,EAACG,KAAK,CAACN,MAAN,CAAaG,OADf;AAENF,YAAAA,KAAK,EAACK,KAAK,CAACN,MAAN,CAAaC,KAFb;AAGNC,YAAAA,WAAW,EAACW,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACG,IAH5B;AAINZ,YAAAA,MAAM,EAACE,KAAK,CAACN,MAAN,CAAaI;AAJd;AAFK,SAAjB;AASA,eAAOC,WAAW,CAACC,KAAD,EAAQC,QAAR,CAAlB;AACD;;AACD,SAAK,kBAAL;AAAyB;AACvB,cAAMA,QAAQ,GAAG,EACb,GAAGD,KADU;AAEbN,UAAAA,MAAM,EAAE;AACNG,YAAAA,OAAO,EAACG,KAAK,CAACN,MAAN,CAAaG,OADf;AAENF,YAAAA,KAAK,EAACK,KAAK,CAACN,MAAN,CAAaC,KAFb;AAGNC,YAAAA,WAAW,EAACW,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACG,IAH5B;AAINZ,YAAAA,MAAM,EAACE,KAAK,CAACN,MAAN,CAAaI;AAJd;AAFK,SAAjB;AASA,eAAOC,WAAW,CAACC,KAAD,EAAQC,QAAR,CAAlB;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,cAAMA,QAAQ,GAAG,EACb,GAAGD,KADU;AAEbN,UAAAA,MAAM,EAAE;AACNG,YAAAA,OAAO,EAACG,KAAK,CAACN,MAAN,CAAaG,OADf;AAENF,YAAAA,KAAK,EAACK,KAAK,CAACN,MAAN,CAAaC,KAFb;AAGNC,YAAAA,WAAW,EAACI,KAAK,CAACN,MAAN,CAAaE,WAHnB;AAINE,YAAAA,MAAM,EAACS,MAAM,CAACE;AAJR;AAFK,SAAjB;AASA,eAAOV,WAAW,CAACC,KAAD,EAAQC,QAAR,CAAlB;AACD;;AACD;AACE,aAAOD,KAAP;AA1EJ;AA4ED;;AAED,eAAeM,UAAf","sourcesContent":["import { getModelData } from '../services/BatteryService';\n\nconst initialState = {\n  carstats: [\n    { miles: 246, model: \"60\" },\n    { miles: 250, model: \"60D\" },\n    { miles: 297, model: \"75\" },\n    { miles: 306, model: \"75D\" },\n    { miles: 336, model: \"90D\" },\n    { miles: 376, model: \"P100D\" }\n  ],\n  config: {\n    speed: 55,\n    temperature: 20,\n    climate: true,\n    wheels: 19\n  }\n}\n\nfunction updateStats(state, newState) {\n  return {\n    ...state,\n    config: newState.config,\n    carstats: calculateStats(newState)\n  }\n}\n\nfunction calculateStats(state) {\n  const models = ['60', '60D', '75', '75D', '90D', 'P100D'];\n  const dataModels = getModelData();\n  return models.map(model => {\n    const { speed, temperature, climate, wheels } = state.config;\n    const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n    return {\n      model,\n      miles\n    };\n  });\n}\n\nfunction appReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'CHANGE_CLIMATE': {\n      const newState = {\n        ...state,\n        config: {\n          climate: !state.config.climate,\n          speed: state.config.speed,\n          temperature: state.config.temperature,\n          wheels: state.config.wheels\n        }\n      };\n      return updateStats(state, newState);\n    }\n    case 'SPEED_UP': {\n      const newState = {\n          ...state,\n          config: {\n            climate:state.config.climate,\n            speed:action.value + action.step,\n            temperature:state.config.temperature,\n            wheels:state.config.wheels\n          }\n      };\n      return updateStats(state, newState);\n    }\n    case 'SPEED_DOWN': {\n      const newState = {\n          ...state,\n          config: {\n            climate:state.config.climate,\n            speed:action.value - action.step,\n            temperature:state.config.temperature,\n            wheels:state.config.wheels\n          }\n      };\n      return updateStats(state, newState);\n    }        \n    case 'TEMPERATURE_UP': {\n      const newState = {\n          ...state,\n          config: {\n            climate:state.config.climate,\n            speed:state.config.speed,\n            temperature:action.value + action.step,\n            wheels:state.config.wheels\n          }\n      };\n      return updateStats(state, newState);\n    }\n    case 'TEMPERATURE_DOWN': {\n      const newState = {\n          ...state,\n          config: {\n            climate:state.config.climate,\n            speed:state.config.speed,\n            temperature:action.value - action.step,\n            wheels:state.config.wheels\n          }\n      };\n      return updateStats(state, newState);\n    }        \n    case 'CHANGE_WHEEL': {\n      const newState = {\n          ...state,\n          config: {\n            climate:state.config.climate,\n            speed:state.config.speed,\n            temperature:state.config.temperature,\n            wheels:action.value\n          }\n      };\n      return updateStats(state, newState);\n    }    \n    default:\n      return state\n  }\n}\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}